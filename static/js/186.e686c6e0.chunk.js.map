{"version":3,"file":"static/js/186.e686c6e0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/Notification/Notification.js","components/helpers/api.js","components/MovieSearchBar/MovieSearchBar.module.css","components/MovieSearchBar/MovieSearch.bar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MoviesList_movieLink__QlD4H\"};","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst MoviesList = ({moviesList}) =>{\nconst location =useLocation();\n\n    return (\n        <ul className={css.moviesList}>\n            {moviesList.map(({id,title,name}) => {\n    return ( <li key={id} className={css.movieItem}>\n<Link className={css.movieLink}  to={`/movies/${id}`} state={{from: location}}> \n        <h2>{title ?? name}</h2>\n      </Link>\n    </li>\n      \n    );\n  })}\n        </ul>\n    )\n}\nMoviesList.propTypes = {\n    moviesList: PropTypes.array.isRequired,\n  };\n\nexport default MoviesList;","export const notificationOptions = {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"colored\",\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY= 'd2ed1712f75ea64103909f0dfb022753';\n\nexport const fetchTrendingMovies = async () => {\n  const {data} = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchSearchMovie = async movie => {\n    const { data } = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query='${movie}'`);\n    return data.results;\n  };\n\nexport const fetchMovieDetails = async movieId => {\n  const {data} = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const {data} = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\nexport const fetchMovieReviews = async movieId => {\n    const {data} = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data.results;\n  };\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './MovieSearchBar.module.css';\nimport { toast } from 'react-toastify';\nimport { notificationOptions } from \"components/Notification/Notification\";\n\nconst MovieSearchBar = ({onChange}) =>{\n    const [movieSearchQuery, setMovieSearchQuery] = useState('');\n\n    const handleSearchQuery = evt => {\n     setMovieSearchQuery(evt.currentTarget.value.toLowerCase());\n    };\n  \n    const handleSubmit = evt => {\n      evt.preventDefault();\n      const form = evt.currentTarget;\n      if (movieSearchQuery.trim() === '') {\n        return toast.warn('Please enter movie search query', notificationOptions);\n      }\n     onChange(movieSearchQuery);\n     form.reset();\n    };\n  \n  \n      return (\n          <form className={css.form} onSubmit={handleSubmit}>\n            <input\n              className={css.input}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movie\"\n              required\n              defaultValue={movieSearchQuery}\n              onChange={handleSearchQuery}\n            />\n            <button type=\"submit\" className={css.button}>\n              <span className={css.buttonLabel}>Search</span>\n            </button>\n  \n          </form>\n      );\n}\nMovieSearchBar.propTypes = {\nonChange:PropTypes.func.isRequired\n}\n\nexport default MovieSearchBar;","import React, { useEffect, useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport { notificationOptions } from 'components/Notification/Notification';\nimport { MutatingDots } from \"react-loader-spinner\";\nimport { fetchSearchMovie } from \"components/helpers/api\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport MovieSearchBar from \"components/MovieSearchBar/MovieSearch.bar\";\nimport { useSearchParams  } from \"react-router-dom\";\n\nconst MoviesPage = ()=>{\n    const [moviesList, setMoviesList] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const movieSearch = searchParams.get('query')\n\nconst checkMoviesList = (Array.isArray(moviesList) && moviesList.length!==0);\n   \n  \n    useEffect(() => {\n      if (!movieSearch) return;\n  \n      const getMoviesList = async () => {\n        try {\n          setIsLoading(true);\n  \n          const movie = await fetchSearchMovie(movieSearch);\n          setMoviesList(movie);\n          toast.success('Movies were successfully fetched!', notificationOptions);\n        } catch (error) {\n          setError(error.message);\n          toast.error(error.message, notificationOptions);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      getMoviesList();\n    }, [movieSearch, checkMoviesList]);\n\n    const handleMovieSearch = query => {\n        if (query === '') {\n            setSearchParams({});\n          return toast.warn('Please enter movie search query', notificationOptions);\n        }\n        setSearchParams({query:query});\n      };\n\n  \n    return (\n      <div>\n         <MovieSearchBar onChange={handleMovieSearch}/>\n        {error !== null && (\n          <p className=\"c-error\">\n            Oops, some error occured. Please, try again later. Error: {error}\n          </p>\n        )}\n        {isLoading && (\n          <MutatingDots\n            height=\"100\"\n            width=\"100\"\n            color=\"#5800a5\"\n            secondaryColor=\"#e08e00\"\n            radius=\"12.5\"\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        )}\n\n        {checkMoviesList && (\n          <><MoviesList moviesList={moviesList} /></>\n        )}\n        \n      </div>\n    );\n}\n\nexport default MoviesPage;"],"names":["moviesList","location","useLocation","className","css","map","id","title","name","to","state","from","notificationOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","BASE_URL","API_KEY","fetchTrendingMovies","axios","data","results","fetchSearchMovie","movie","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","onChange","useState","movieSearchQuery","setMovieSearchQuery","onSubmit","evt","preventDefault","form","currentTarget","trim","toast","reset","type","autoComplete","autoFocus","placeholder","required","defaultValue","value","toLowerCase","setMoviesList","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieSearch","get","checkMoviesList","Array","isArray","length","useEffect","getMoviesList","message","query","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","MoviesList"],"sourceRoot":""}